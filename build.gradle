plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id "org.sonarqube" version "3.3"
	id "maven-publish"
}

publishing {
	
	publications {
	
	maven(MavenPublication) {
		//bootJar is the default build task configured by spring boot
		artifact bootJar
	}}
	
	repositories {
	
		maven {
			if(project.version.endsWith('-SNAPSHOT')) {
				url "http://3.110.216.191:8081/repository/maven-snapshots/"
			}
			else {
				url "http://3.110.216.191:8081/repository/maven-releases/"
			}
		credentials {
		
		username "admin"
		password "admin123"
		
		}
		
		}
	}
	
	
	}
/*publishing {
	publications {
		maven(MavenPublication) {
			//bootJar is the default build task configured by spring boot
			artifact bootJar
		}
   }
	repositories {
		maven {
			credentials {
				username 'admin'
				password 'admin123'
			}
			name 'Nexus_Repo'
			def releasesRepoUrl =  "http://3.110.216.191:8081/repository/maven-releases/"
			def snapshotsRepoUrl = "http://3.110.216.191:8081/repository/maven-snapshots/"
			url = project.version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}*/

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
                property "sonar.projectName", "springboot-tomcat-gradle-war"
                property "sonar.host.url", "http://65.1.95.116:9000"
                property "sonar.login", "6d7dcd10b8b2943128d0f7c5db306bf5aa723aa6"
    }
}
